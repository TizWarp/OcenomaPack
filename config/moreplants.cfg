# Configuration file

~CONFIG_VERSION: 1.0

cooksonia {
    # List of biomes Cooksonia are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeBlacklistCooksonia <
     >

    # List of biomes Cooksonia can generate in, in the format modid:biomeid [default: empty]
    S:biomeCooksonia <
     >

    # Set to true to generate Cooksonia in the list of biomes set in this config or set to false to use the default BiomeDictionary Types (which are SWAMP and LUSH but never SNOWY) [default: false]
    B:biomeoptionCooksonia=false

    # List of dimension IDs Cooksonia can generate in [default: 0]
    I:dimCooksonia <
        0
     >

    # Set to true/false to toggle generation of Cooksonia naturally [default: true]
    B:genCooksonia=true
}


"giant horsetail" {
    # List of biomes Giant Horsetails are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeBlacklistHorsetail <
     >

    # List of biomes Giant Horsetails can generate in, in the format modid:biomeid [default: empty]
    S:biomeHorsetail <
     >

    # Set to true to generate Giant Horsetails in the list of biomes set in this config or set to false to use the default BiomeDictionary Types (which are SWAMP, RIVER and JUNGLE) [default: false]
    B:biomeoptionHorsetail=false

    # List of dimension IDs Giant Horsetails can generate in [default: 0]
    I:dimHorsetail <
        0
     >

    # Set to true/false to toggle generation of Giant Horsetails naturally [default: true]
    B:genHorsetail=true
}


prototaxites {
    # List of biomes Prototaxites are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeBlacklistPrototaxites <
     >

    # List of biomes Prototaxites can generate in, in the format modid:biomeid [default: empty]
    S:biomePrototaxites <
     >

    # Set to  true to generate Prototaxites in the list of biomes set in this config or false to allow spawning in any biome [default: false]
    B:biomeoptionPrototaxites=false

    # List of dimension IDs Prototaxites can generate in [default: 0]
    I:dimPrototaxites <
        0
     >

    # Set to true/false to toggle generation of Prototaxites naturally [default: true]
    B:genPrototaxites=true
}


psilophyton {
    # List of biomes Psilophyton are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeBlacklistPsilophyton <
     >

    # List of biomes Psilophyton can generate in, in the format modid:biomeid [default: empty]
    S:biomePsilophyton <
     >

    # Set to true to generate Psilophyton in the list of biomes set in this config or set to false to use the default BiomeDictionary Types (which are RIVER, WET, LUSH, PLAINS but never SNOWY) [default: false]
    B:biomeoptionPsilophyton=false

    # List of dimension IDs Psilophyton can generate in [default: 0]
    I:dimPsilophyton <
        0
     >

    # Set to true/false to toggle generation of Psilophyton naturally [default: true]
    B:genPsilophyton=true
}


"scaly lepidodendron" {
    # List of biomes Scaly Lepidodendrons are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeScalyLepidodendron <
     >

    # Set to true to generate Scaly Lepidodendrons in the list of biomes set in this config or set to false to use the default BiomeDictionary Types  (which are SWAMP and RIVER but never SNOWY) [default: false]
    B:biomeoptionScalyLepidodendron=false

    # List of dimension IDs Scaly Lepidodendrons can generate in [default: 0]
    I:dimScalyLepidodendron <
        0
     >

    # Set to true/false to toggle generation of Scaly Lepidodendrons naturally [default: true]
    B:genScalyLepidodendron=true
}


"tree fern" {
    # List of biomes Tree Ferns are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeBlacklistTreeFern <
     >

    # List of biomes Tree Ferns can generate in, in the format modid:biomeid [default: empty]
    S:biomeTreeFern <
     >

    # Set to true to generate Tree Ferns in the list of biomes set in this config or set to false to use the default BiomeDictionary Types  (which are SWAMP, FOREST and CONIFEROUS but never SNOWY) [default: false]
    B:biomeoptionTreeFern=false

    # List of dimension IDs Tree Ferns can generate in [default: 0]
    I:dimTreeFern <
        0
     >

    # Set to true/false to toggle generation of Tree Ferns naturally [default: true]
    B:genTreeFern=true
}


wattieza {
    # List of biomes Wattieza are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeBlacklistWattieza <
     >

    # List of biomes Wattieza can generate in, in the format modid:biomeid [default: empty]
    S:biomeWattieza <
     >

    # Set to true to generate Wattieza in the list of biomes set in this config or set to false to use the default BiomeDictionary Types (which are JUNGLE, SWAMP, FOREST and WET but never SNOWY) [default: false]
    B:biomeoptionWattieza=false

    # List of dimension IDs Wattieza can generate in [default: 0]
    I:dimWattieza <
        0
     >

    # Set to true/false to toggle generation of Wattieza naturally [default: true]
    B:genWattieza=true
}


"woody lepidodendron" {
    # List of biomes WoodyLepidodendrons are blacklisted from, in the format modid:biomeid [default: empty]
    S:biomeBlacklistWoodyLepidodendron <
     >

    # List of biomes Woody Lepidodendrons can generate in, in the format modid:biomeid [default: empty]
    S:biomeWoodyLepidodendron <
     >

    # Set to true to generate Woody Lepidodendrons in the list of biomes set in this config or set to false to use the default BiomeDictionary Types (which are SWAMP, RIVER and CONIFEROUS but never SNOWY) [default: false]
    B:biomeoptionWoodyLepidodendron=false

    # List of dimension IDs Woody Lepidodendrons can generate in [default: 0]
    I:dimWoodyLepidodendron <
        0
     >

    # Set to true/false to toggle generation of Woody Lepidodendrons naturally [default: true]
    B:genWoodyLepidodendron=true
}


